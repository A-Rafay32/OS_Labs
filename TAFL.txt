Regular Expression :
The language accepted by finite automata can be easily described by simple expressions called Regular Expressions. It is the most effective way to represent any language.
Regular expressions are used to match character combinations in strings. String searching algorithm used this pattern to find the operations on a string

Regular Languages: 
The languages accepted by some regular expression are referred to as Regular languages.

Conversion of RE TO FA:
To convert the RE to FA, we are going to use a method called the subset method. This method is given below:
Step 1: Design a transition diagram for given regular expression, using NFA with ε moves.
Step 2: Convert this NFA with ε to NFA without ε.
Step 3: Convert the obtained NFA to equivalent DFA

Arden's Theorem:
The Arden's Theorem is useful for checking the equivalence of two regular expressions as well as in the conversion of DFA to a regular expression.

Grammar:
A grammar is a set of production rules which are used to generate strings of a language.
Any Grammar can be represented by 4 tuples – <N, T, P, S>

Terminal Symbols:
Terminal symbols are those which are the components of the sentences generated using a grammar and are represented using small case letter like a, b, c etc.

Non-Terminal Symbols :
Non-Terminal Symbols are those symbols which take part in the generation of the sentence but are not the component of the sentence. Non-Terminal Symbols are also called Auxiliary Symbols and Variables. These symbols are represented using a capital letter like A, B, C, etc.	

Type-0 : Unresctricted Grammar
Type-0 grammars include all formal grammar. Type 0 grammar languages are recognized by turing machine. These languages are also known as the Recursively Enumerable languages. 

Moore Machine:
Moore machine is a finite state machine in which the next state is decided by the current state and current input symbol. The output symbol at a given time depends only on the present state of the machine. Moore machine can be described by 6 tuples (Q, q0, ∑, O, δ, λ) ,

Mealy Machine:
A Mealy machine is a machine in which output symbol depends upon the present input symbol and present state of the machine. In the Mealy machine, the output is represented with each input symbol for each state separated by /. The Mealy machine can be described by 6 tuples (Q, q0, ∑, O, δ, λ')

Automaton = A self-operating machine or mechanism


Turing Machine :
Turing Machine was invented by Alan Turing in 1936 and it is used to accept
Recursive Enumerable Languages (generated by Type-0 Grammar).

A turing machine consists of a tape of infinite length on which read and writes
operation can be performed. The tape consists of infinite cells on which each
cell either contains input symbol or a special symbol called blank. It also
consists of a head pointer which points to cell currently being read and it can
move in both directions.

A TM is expressed as a 7-tuple (Q, T, B, ∑, δ, q0, F) where: 
 Q is a finite set of states
T is the tape alphabet (symbols which can be written on Tape)
B is blank symbol (every cell is filled with B except input alphabet initially)
∑ is the input alphabet (symbols which are part of input alphabet)
δ is a transition function which maps Q × T → Q × T × {L,R}. Depending on its present state and present tape alphabet (pointed by head pointer), it will move to new state, change the tape symbol (may or may not) and move head pointer to either left or right.
q0 is the initial state
F is the set of final states. If any state of F is reached, input string is accepted.


Pushdown Automata:
Pushdown Automata is a finite automata with extra memory called stack which helps Pushdown automata to recognize Context Free Languages. 
  
A Pushdown Automata (PDA) can be defined as :
 
Q is the set of states
∑ is the set of input symbols
Γ is the set of pushdown symbols (which can be pushed and popped from stack)
q0 is the initial state
Z is the initial pushdown symbol (which is initially present in stack)
F is the set of final states
δ is a transition function which maps Q x {Σ ∪ ∈} x Γ into Q x Γ*. 

